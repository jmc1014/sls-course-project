service: sls-auction-service

plugins:
  - serverless-bundle 

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
    AUCTIONS_BUCKET_NAME: ${self:custom.AuctionsBucket.name}
  iam:
    role:
      statements:
        - ${file(./iam/AuctionsTableIAM.yml):AuctionsTableIAM}
        - ${file(./iam/MailQueueIAM.yml):MailQueueIAM}
        - ${file(./iam/AuctionsBucketIAM.yml):AuctionsBucketIAM}
  # iam:
  #   role:
  #     statements:
  #       - Effect: 'Allow'
  #         Action: 
  #           - dynamodb:PutItem
  #         Resource: 
  #           - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/AuctionsTable

resources:
  Resources:
    AuctionsTable: ${file(./resources/AuctionsTable.yml):AuctionsTable}
    AuctionsBucket: ${file(./resources/AuctionsBucket.yml):AuctionsBucket}
    AuctionsBucketPolicy: ${file(./resources/AuctionsBucket.yml):AuctionsBucketPolicy}
    # AuctionsTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: AuctionsTable
    #     BillingMode: PAY_PER_REQUEST
    #     AttributeDefinitions:
    #       - AttributeName: id
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: id
    #         KeyType: HASH

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}
          
  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}
  
  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}
  
  uploadAuctionPicture:
    handler: src/handlers/uploadAuctionPicture.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/picture
          authorizer: ${self:custom.authorizer}

  processAuction:
    handler: src/handlers/processAuction.handler
    # events:
    #   - schedule: rate(1 minute)


custom:
  authorizer: arn:aws:lambda:${aws:region}:${aws:accountId}:function:sls-auth-service-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:sls-notification-service-${self:provider.stage}.MailQueueArn}
    url: ${cf:sls-notification-service-${self:provider.stage}.MailQueueUrl}
  AuctionsBucket:
    name: auctions-bucket-site-upload-01-${self:provider.stage}
  bundle:
    linting: false # Setting 'false' for tutorial purposes only. Enable it if needed for Production. 



    